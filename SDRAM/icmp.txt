; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\SDRAM\icmp.o --asm_dir=.\SDRAM\ --list_dir=.\SDRAM\ --depend=.\SDRAM\icmp.d --cpu=ARM920T --apcs=interwork -O0 -I..\Common\Inc -I.\INC -I.\INC\tftp -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Samsung --omf_browse=.\SDRAM\icmp.crf Source\tftp\icmp.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  icmp_send_echo PROC
;;;10     
;;;11     static int icmp_send_echo(struct sk_buff *skb)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;12     {
000004  e1a09000          MOV      r9,r0
;;;13     	struct icmphdr *icmp_hdr, *icmp_echo;	
;;;14     	unsigned int tmp, sum, i, cnt;		
;;;15     			
;;;16     	cnt = skb->len;		
000008  e59985f4          LDR      r8,[r9,#0x5f4]
;;;17     	if(cnt%2)
00000c  e3180001          TST      r8,#1
000010  0a000000          BEQ      |L1.24|
;;;18     		cnt++;		
000014  e2888001          ADD      r8,r8,#1
                  |L1.24|
;;;19     				
;;;20     	icmp_hdr = (struct icmphdr *)(skb->data);
000018  e599a5f0          LDR      r10,[r9,#0x5f0]
;;;21     	skb = alloc_skb(ETH_FRAME_LEN);
00001c  e59f00f8          LDR      r0,|L1.284|
000020  ebfffffe          BL       alloc_skb
000024  e1a09000          MOV      r9,r0
;;;22     	ip_skb_reserve(skb);		//reserve for eth and ip stack	
000028  e1a00009          MOV      r0,r9
00002c  ebfffffe          BL       ip_skb_reserve
;;;23     	icmp_echo = (struct icmphdr *)skb_put(skb, cnt);	
000030  e1a01008          MOV      r1,r8
000034  e1a00009          MOV      r0,r9
000038  ebfffffe          BL       skb_put
00003c  e1a05000          MOV      r5,r0
;;;24     	
;;;25     	icmp_echo->type  = 0;
000040  e3a00000          MOV      r0,#0
000044  e5c50000          STRB     r0,[r5,#0]
;;;26     	icmp_echo->code  = 0;	
000048  e5c50001          STRB     r0,[r5,#1]
;;;27     	sum = 0;			
00004c  e3a07000          MOV      r7,#0
;;;28     	for(i=2; i<cnt/2; i++)
000050  e3a04002          MOV      r4,#2
000054  ea000005          B        |L1.112|
                  |L1.88|
;;;29     	{	
;;;30     		tmp = *((unsigned short *)(&icmp_hdr->type)+i);
000058  e08a0084          ADD      r0,r10,r4,LSL #1
00005c  e1d060b0          LDRH     r6,[r0,#0]
;;;31     		*((unsigned short *)(&icmp_echo->type)+i) = tmp;
000060  e0850084          ADD      r0,r5,r4,LSL #1
000064  e1c060b0          STRH     r6,[r0,#0]
;;;32     		sum += tmp;				
000068  e0877006          ADD      r7,r7,r6
00006c  e2844001          ADD      r4,r4,#1              ;28
                  |L1.112|
000070  e15400a8          CMP      r4,r8,LSR #1          ;28
000074  3afffff7          BCC      |L1.88|
;;;33     	}
;;;34     	i = sum>>16;
000078  e1a04827          LSR      r4,r7,#16
;;;35     	icmp_echo->check = 0xffffu-(sum&0xffff)-i;			
00007c  e3e00000          MVN      r0,#0
000080  e0400007          SUB      r0,r0,r7
000084  e0400004          SUB      r0,r0,r4
000088  e1a00800          LSL      r0,r0,#16
00008c  e1a00820          LSR      r0,r0,#16
000090  e5c50002          STRB     r0,[r5,#2]
000094  e1a00420          LSR      r0,r0,#8
000098  e5c50003          STRB     r0,[r5,#3]
;;;36     	ip_send(skb, client_ip, ICMP);
00009c  e3a02001          MOV      r2,#1
0000a0  e59f0078          LDR      r0,|L1.288|
0000a4  e5901000          LDR      r1,[r0,#0]  ; client_ip
0000a8  e1a00009          MOV      r0,r9
0000ac  ebfffffe          BL       ip_send
;;;37     
;;;38     	return 0;
0000b0  e3a00000          MOV      r0,#0
0000b4  e8bd47f0          POP      {r4-r10,lr}
;;;39     }
0000b8  e12fff1e          BX       lr
;;;40     
                          ENDP

                  icmp_rcv_echo PROC
;;;41     static int icmp_rcv_echo(struct sk_buff *skb)
0000bc  e92d4010          PUSH     {r4,lr}
;;;42     {
0000c0  e1a04000          MOV      r4,r0
;;;43     	client_ip = ip_get_source_ip(skb);
0000c4  e1a00004          MOV      r0,r4
0000c8  ebfffffe          BL       ip_get_source_ip
0000cc  e59f104c          LDR      r1,|L1.288|
0000d0  e5810000          STR      r0,[r1,#0]  ; client_ip
;;;44     		
;;;45     	icmp_send_echo(skb);
0000d4  e1a00004          MOV      r0,r4
0000d8  ebfffffe          BL       icmp_send_echo
;;;46     	
;;;47     	return 0;
0000dc  e3a00000          MOV      r0,#0
0000e0  e8bd4010          POP      {r4,lr}
;;;48     }
0000e4  e12fff1e          BX       lr
;;;49     
                          ENDP

                  icmp_rcv_packet PROC
;;;50     int icmp_rcv_packet(struct sk_buff *skb)
0000e8  e92d4070          PUSH     {r4-r6,lr}
;;;51     {
0000ec  e1a04000          MOV      r4,r0
;;;52     	struct icmphdr *icmp_hdr = (struct icmphdr *)(skb->data);
0000f0  e59455f0          LDR      r5,[r4,#0x5f0]
;;;53     	
;;;54     	switch(icmp_hdr->type)
0000f4  e5d50000          LDRB     r0,[r5,#0]
0000f8  e3500008          CMP      r0,#8
0000fc  1a000002          BNE      |L1.268|
;;;55     	{
;;;56     		case 8:
;;;57     		icmp_rcv_echo(skb);
000100  e1a00004          MOV      r0,r4
000104  ebfffffe          BL       icmp_rcv_echo
000108  e1a00000          MOV      r0,r0                 ;54
                  |L1.268|
00010c  e1a00000          MOV      r0,r0                 ;54
;;;58     	}
;;;59     	
;;;60     	return 0;
000110  e3a00000          MOV      r0,#0
000114  e8bd4070          POP      {r4-r6,lr}
;;;61     }
000118  e12fff1e          BX       lr
;;;62     
                          ENDP

                  |L1.284|
                          DCD      0x000005ea
                  |L1.288|
                          DCD      client_ip

                          AREA ||.data||, DATA, ALIGN=2

                  client_ip
                          DCD      0x00000000
